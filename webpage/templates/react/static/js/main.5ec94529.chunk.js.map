{"version":3,"sources":["Components/ThePlayer.js","Components/MusicPlayer.js","Components/Timer.js","assets/session_completed.ogg","Components/Todo.js","Components/TodoList.js","Components/TodoForm.js","Components/Main.js","Components/Settings.js","Components/App.js","index.js"],"names":["ThePlayer","props","PlayerPlaying","event","sendStatus","PlayerPaused","PlayerChanged","vidInfo","target","getVideoData","sendVideoInfo","PlayerReady","cuePlaylist","listType","list","localStorage","getItem","JSON","parse","playlistId","index","shuffle","Math","round","random","setPlaybackQuality","setVolume","vol","state","volume","setShuffle","setLoop","document","getElementById","addEventListener","playingStatus","pauseVideo","playVideo","setTimeout","spinner","querySelector","e","detail","value","nextVideo","previousVideo","code","setState","prev","playerReady","opts","height","width","playerVars","autoplay","onReady","this","onStateChange","onPlay","onPause","Component","require","config","countdown","statusEvent","MusicPlayer","componentDidMount","preferences","handleVideoInfo","videoData","nowPlaying","thumbnail","video_id","getPlayingStatus","status","thumbnailBG","background","className","title","id","onClick","spinHandler","style","videoId","setPlayerStatus","Timer","val","CustomEvent","dispatchEvent","timer","started","audioInit","Audio","soundfile","seconds","sessionLength","then","Date","now","setInterval","secondsLeft","sessionEnded","displayCountdown","minutes","floor","remainderSeconds","displayedTime","time","clearTimer","clearInterval","is_work","changebreaktime","changeworktime","audio","continue","play","setItem","Number","sendFocusedTime","timeFocused","worktime","breaktime","StyledDiv","styled","div","Todo","toggleComplete","todo","task","TodoList","todos","map","StyledForm","form","StyledInput","input","ButtonsDiv","StyledButton","button","TodoForm","name","type","onChange","inputChangeHandler","placeholder","addTask","removeItems","removeAllItems","TodoListDiv","StyledH1","h1","Main","expanded","classList","contains","chat","focusedTime","toggle","chatBtn","wrapper","send_btn","chat_list","send_txt","history","text","replaceAll","innerHTML","process","REACT_APP_DEBUG","window","console","methods","i","length","addLocalStorage","saveLocalStorage","bind","getFocusedTime","preventDefault","newTask","completed","itemId","prevState","filter","key","hasOwnProperty","log","stringify","darkmode","to","Settings","setDarkmode","useState","pref","setPref","saved","setSaved","useEffect","checkChange","currentTarget","checked","btn","color","href","onSubmit","split","pop","local","select","htmlFor","removeItem","App","darkMode","path","exact","component","ReactDOM","render"],"mappings":"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","file":"static/js/main.5ec94529.chunk.js","sourcesContent":["import React,{Component} from \"react\";\r\nimport YouTube from 'react-youtube';\r\n\r\nclass ThePlayer extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      'volume': 50\r\n    };\r\n  }\r\n\r\n  render() {\r\n    const opts = {\r\n      height: \"390\",\r\n      width: \"640\",\r\n      playerVars: {\r\n        autoplay: 0,\r\n      }\r\n    };\r\n\r\n    return (\r\n      <YouTube\r\n        opts={opts}\r\n        onReady={this.PlayerReady}\r\n        onStateChange={this.PlayerChanged}\r\n        onPlay={this.PlayerPlaying}\r\n        onPause={this.PlayerPaused}\r\n      />\r\n    );\r\n  }\r\n\r\n  PlayerPlaying = event => {\r\n    this.props.sendStatus(true);\r\n  };\r\n\r\n  PlayerPaused = event => {\r\n    this.props.sendStatus(false);\r\n  };\r\n\r\n  PlayerChanged = event => {\r\n    const vidInfo = event.target.getVideoData();\r\n    this.props.sendVideoInfo(vidInfo);\r\n  };\r\n\r\n  PlayerReady = event => {\r\n    event.target.cuePlaylist({\r\n      listType: 'playlist',\r\n      list: localStorage.getItem(\"preferences\") ? `${JSON.parse(localStorage.getItem('preferences')).playlistId}` : \"PLx65qkgCWNJIs3FPaj8JZhduXSpQ_ZfvL\",\r\n      index: JSON.parse(localStorage.getItem('preferences')).shuffle ? Math.round(Math.random() * (10-1) + 1) : 0\r\n    });\r\n    event.target.setPlaybackQuality('low');\r\n\r\n    const setVolume = (vol) => {\r\n      event.target.setVolume(vol);\r\n    }\r\n    setVolume(this.state.volume);\r\n\r\n    const setShuffle = () =>{ \r\n      event.target.setShuffle(JSON.parse(localStorage.getItem('preferences')).shuffle);\r\n      event.target.setLoop(true);\r\n    }\r\n\r\n    const playtoggle = document.getElementById(\"playpause\");\r\n    playtoggle.addEventListener(\"click\", () => {\r\n      !this.props.playingStatus\r\n        ? event.target.playVideo()\r\n        : event.target.pauseVideo();\r\n      setTimeout(setShuffle, 1000);\r\n    });\r\n\r\n    const spinner = document.querySelector(\".spinner\");\r\n    spinner.addEventListener(\"click\", () => {\r\n      !this.props.playingStatus\r\n        ? event.target.playVideo()\r\n        : event.target.pauseVideo();\r\n      setTimeout(setShuffle, 1000);\r\n    });\r\n\r\n    spinner.addEventListener(\"timerStatus\", (e) => {\r\n      e.detail.value\r\n        ? event.target.playVideo()\r\n        : event.target.pauseVideo();\r\n      setTimeout(setShuffle, 1000);\r\n    });\r\n\r\n    const nextbutton = document.getElementById(\"nextbutton\");\r\n    nextbutton.addEventListener(\"click\", () => {\r\n      event.target.nextVideo();\r\n    });\r\n\r\n    const prevbutton = document.getElementById(\"prevbutton\");\r\n    prevbutton.addEventListener(\"click\", () => {\r\n      event.target.previousVideo();\r\n    });\r\n\r\n    document.addEventListener(\"keydown\", (e)=>{\r\n      switch(e.code){\r\n        case \"ArrowUp\":\r\n          this.setState(prev => {\r\n            if(prev.volume !== 100){\r\n              setVolume(prev.volume +5);\r\n              return ({\r\n                'volume': prev.volume+5\r\n              });\r\n            }\r\n          });\r\n          break;\r\n        case \"ArrowDown\":\r\n          this.setState(prev => {\r\n            if(prev.volume !== 0){\r\n              setVolume(prev.volume-5);\r\n              return ({\r\n                'volume': prev.volume-5\r\n              });\r\n            }\r\n          });\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n    });\r\n    this.props.playerReady(true);\r\n  };\r\n}\r\nexport default ThePlayer;","import React, { Component } from 'react';\r\nimport ThePlayer from './ThePlayer'\r\nimport '../css/MusicPlayer.css';\r\nrequire('dotenv').config();\r\n\r\nclass MusicPlayer extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      playingStatus: false,\r\n      nowPlaying: \"\",\r\n      preferences: []\r\n    };\r\n  }\r\n\r\n  componentDidMount = () => {\r\n    this.setState({\r\n      preferences: JSON.parse(localStorage.getItem(\"preferences\"))\r\n    });\r\n  }\r\n\r\n  handleVideoInfo = (videoData) => {\r\n    this.setState({ nowPlaying: videoData, thumbnail: `https://img.youtube.com/vi/${videoData.video_id}/0.jpg`})\r\n  }\r\n\r\n  getPlayingStatus = status => {\r\n    this.setState({playingStatus:status});\r\n  }\r\n\r\n  render() {\r\n    const thumbnailBG = {\r\n      background: 'url('+this.state.thumbnail+') no-repeat center'\r\n    }\r\n    return (\r\n      <div className=\"music\">\r\n        <p>Now Playing</p>\r\n        <h3>{this.state.nowPlaying.title}</h3>\r\n        <div className=\"spinner\" id=\"spinner\" onClick={this.spinHandler} style={thumbnailBG}>\r\n          <div className=\"hole\">\r\n            <div className=\"secondhole\"></div>\r\n          </div>\r\n        </div>\r\n        <div id=\"player\"></div>\r\n        <div className=\"button-container\">\r\n          <button id=\"prevbutton\" className=\"buttons\">\r\n            <i className=\"material-icons-round\">skip_previous</i>\r\n        </button>\r\n          <button id=\"playpause\" className=\"buttons\">\r\n            <i className=\"material-icons-round\">{this.state.playingStatus ? \"pause_circle_filled\" : \"play_circle_filled\"}</i>\r\n          </button>\r\n          <button id=\"nextbutton\" className=\"buttons\">\r\n            <i className=\"material-icons-round\">skip_next</i>\r\n          </button>\r\n        </div>\r\n        <ThePlayer\r\n          videoId={this.state.nowPlaying.videoId}\r\n          playingStatus={this.state.playingStatus}\r\n          sendVideoInfo={this.handleVideoInfo}\r\n          sendStatus = {this.getPlayingStatus}\r\n          playerReady = {this.props.setPlayerStatus}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MusicPlayer;","import React, {Component} from \"react\";\r\nimport '../css/Timer.css';\r\nimport soundfile from '../assets/session_completed.ogg';\r\n\r\nlet countdown, statusEvent;\r\n\r\nclass Timer extends Component{\r\n    constructor(){\r\n        super();\r\n        this.state = {\r\n            sessionLength: 1500,\r\n            started: false,\r\n            time: \"25:00\",\r\n            worktime: \"25:00\",\r\n            breaktime: \"5:00\",\r\n            is_work: true,\r\n        }\r\n    }\r\n\r\n    componentDidMount = () =>{\r\n        const spinner = document.querySelector(\".spinner\");\r\n        statusEvent = (val) =>{\r\n            const event = new CustomEvent('timerStatus',{\r\n                detail: {\r\n                    value: val\r\n                }\r\n            })\r\n            spinner.dispatchEvent(event);\r\n        }\r\n    }\r\n\r\n    timer = () => {\r\n        if(this.props.playerReady){\r\n            this.setState({started: true});    \r\n            statusEvent(true);\r\n            const audioInit = new Audio(soundfile);\r\n            const seconds = this.state.sessionLength;\r\n            const now = Date.now();\r\n            const then = now + seconds * 1000;\r\n            countdown = setInterval(()=>{\r\n                const secondsLeft = Math.round((then - Date.now())/1000);\r\n                //check if timer should stop\r\n                if(secondsLeft <= 0){\r\n                    this.sessionEnded(audioInit);\r\n                }\r\n                this.displayCountdown(secondsLeft);\r\n            },1000)\r\n        }\r\n        else{\r\n            setTimeout(()=>{\r\n                this.timer();\r\n            },1000);\r\n        }\r\n    }\r\n\r\n    displayCountdown = (seconds) =>{\r\n        const minutes = Math.floor(seconds / 60);\r\n        const remainderSeconds = seconds % 60;\r\n        const displayedTime = `${minutes < 10 ? '0' : ''}${minutes}:${remainderSeconds < 10 ? '0' : ''}${remainderSeconds}`;\r\n        this.setState({time: displayedTime})\r\n    }   \r\n\r\n    clearTimer = () => {\r\n        statusEvent(false);\r\n        clearInterval(countdown);\r\n        if(this.state.is_work){\r\n            this.setState({started: false, time: '25:00'})\r\n        }\r\n        else{\r\n            this.setState({started: false, time: '5:00'})\r\n        } \r\n    }\r\n\r\n    changebreaktime = () => {\r\n        this.setState({is_work: false, time: '5:00', sessionLength: 300})\r\n    }\r\n\r\n    changeworktime = () => {\r\n        this.setState({is_work: true, time: '25:00', sessionLength: 1500})\r\n    }\r\n\r\n    sessionEnded = (audio) => {\r\n        if(!JSON.parse(localStorage.getItem(\"preferences\")).continue){\r\n            statusEvent(false);\r\n        }\r\n        audio.play();\r\n        clearInterval(countdown);\r\n        if (localStorage.getItem('focusedTime')) {\r\n            localStorage.setItem('focusedTime', Number(localStorage.getItem('focusedTime')) + 25)\r\n        }\r\n        else {\r\n            localStorage.setItem('focusedTime', 25)\r\n        }\r\n        this.props.sendFocusedTime(localStorage.getItem(\"focusedTime\"));\r\n        // Temp\r\n        setTimeout(()=>{\r\n            this.setState({ started: false, time: this.state.is_work? \"25:00\" : \"5:00\", timeFocused: localStorage.getItem(\"focusedTime\")});\r\n        }, 500);\r\n    }\r\n\r\n    render(){\r\n        return (\r\n        <div className=\"timer\">\r\n            <div className=\"buttontype\">\r\n                <button id=\"btn1\" onClick={this.changeworktime}> pomodoro</button>\r\n                <button id=\"btn2\" onClick={this.changebreaktime}> break</button>\r\n            </div>\r\n            <p id=\"spacehere\">Time Remaining</p>\r\n            <h1>{this.state.time}</h1>\r\n            <button id=\"timerStarter\" onClick={this.state.started ? this.clearTimer : this.timer}>{!this.state.started ? 'Start Timer' : 'Quit!'}</button>\r\n        </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Timer;","export default __webpack_public_path__ + \"static/media/session_completed.4e5c754b.ogg\";","import React from 'react';\r\nimport styled from \"styled-components\";\r\n\r\n\r\nconst StyledDiv = styled.div`\r\n  /* &:active {\r\n  box-shadow: 0 5px #A9837A; */\r\n  }\r\n`\r\n\r\n\r\nconst Todo = props => {\r\n  return (\r\n    <StyledDiv\r\n      key={props.todo.id}\r\n      onClick={ event => {\r\n        props.toggleComplete(props.todo.id)\r\n      }}>\r\n      <p>• {props.todo.task}</p>\r\n    </StyledDiv>\r\n  )\r\n}\r\n\r\nexport default Todo;","import React from 'react';\r\nimport styled from \"styled-components\";\r\nimport Todo from './Todo';\r\n\r\nconst StyledDiv = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  color: var(--primary);\r\n  margin-top: 50px;\r\n  font-size: 25px;\r\n  text-transform:uppercase;\r\n`\r\n\r\nconst TodoList = props => {\r\n  return (\r\n    <StyledDiv>\r\n      {props.todos.map((todo, id) => (\r\n        <Todo\r\n          todo={todo}\r\n          key={id}\r\n          toggleComplete={props.toggleComplete}\r\n        />\r\n      ))}\r\n    </StyledDiv>\r\n  )\r\n}\r\n\r\nexport default TodoList;","import React from 'react';\r\nimport styled from \"styled-components\";\r\n\r\n\r\nconst StyledForm = styled.form`\r\n  display: flex;\r\n  align-items: stretch;\r\n  flex-direction: column\r\n  /* position: relative; */\r\n`\r\nconst StyledInput = styled.input`\r\n  margin-top: 10px;\r\n`\r\nconst ButtonsDiv = styled.div`\r\n  display: inline-block;\r\n  flex-direction: column\r\n  align-items: stretch;\r\n  padding-top: 20px;\r\n`\r\nconst StyledButton = styled.button`\r\n  font-size: 15px;\r\n  /* display:inline-block; */\r\n  /* padding:0.5em 3em; - Padding dynamically changes button size based off of text*/\r\n  width: 185px;\r\n  line-height: 40px;\r\n  border:0.16em solid white;\r\n  margin:0.5em .08em 0.3em .8em;\r\n  box-sizing: border-box;\r\n  text-decoration:none;\r\n  text-transform:uppercase;\r\n  font-family:'Roboto',sans-serif;\r\n  font-weight:400;\r\n  color: var(--primary);\r\n  background: #EEB9AD;\r\n  text-align:center;\r\n  transition: all 0.15s;\r\n  border-radius: 20px;\r\n  &:hover{\r\n  color:#F3F3F3;\r\n  border-color:#F3F3F3;\r\n  }\r\n  &:focus{\r\n  outline: none;\r\n  }\r\n  &:active {\r\n  box-shadow: 0 5px #A9837A;\r\n  }\r\n`\r\n\r\n\r\nconst TodoForm = props => {\r\n  return (\r\n    <StyledForm>\r\n      <StyledInput\r\n        name='todo'\r\n        value={props.value}\r\n        type='text'\r\n        onChange={props.inputChangeHandler}\r\n        placeholder='Enter a task'\r\n      />\r\n      <ButtonsDiv>\r\n        <StyledButton onClick={props.addTask}>Add Task</StyledButton>\r\n        <StyledButton onClick={props.removeItems}>Remove Completed</StyledButton>\r\n        <StyledButton onClick={props.removeAllItems}>Remove All</StyledButton>\r\n      </ButtonsDiv>\r\n    </StyledForm>\r\n  )\r\n}\r\n\r\nexport default TodoForm;","import React, { Component } from 'react';\r\nimport styled from \"styled-components\";\r\nimport MusicPlayer from './MusicPlayer';\r\nimport Timer from './Timer';\r\nimport TodoList from './TodoList';\r\nimport TodoForm from './TodoForm';  \r\nimport {Link} from 'react-router-dom';\r\nimport '../css/Main.css';\r\n\r\nconst TodoListDiv = styled.div`\r\n  /* background: black; */\r\n  /* width: 50%; */\r\n  margin-left: 80px;\r\n  /* align-items: center; */\r\n`\r\n\r\nconst StyledH1 = styled.h1`\r\n  font-size: 45px;\r\n  margin: 10px;\r\n  color: var(--primary);\r\n  /* text-shadow: -1px 0 #AE857C, 0 1px #AE857C, 1px 0 #AE857C, 0 -1px #AE857C; */\r\n  text-align: center;\r\n`\r\n\r\nexport default class Main extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            expanded: \"\",\r\n            chat: \"\",\r\n            focusedTime: 0,\r\n            playerReady: false,\r\n            todo: '',\r\n            todos: [{ // Array of our to-do items\r\n                // task: '',\r\n                // id: '',\r\n                // completed: false\r\n            }],\r\n        }\r\n    }\r\n\r\n    componentDidMount = () =>{\r\n\r\n        this.setState({ \r\n            expanded: document.querySelector(\".bulk-container\").classList.contains(\"active\") ? true : false, \r\n            chat: document.getElementById(\"wrapper\").classList.contains(\"toggled\") ? true : false, \r\n            focusedTime: localStorage.getItem(\"focusedTime\") ? localStorage.getItem(\"focusedTime\") : 0\r\n        });\r\n\r\n        const button = document.getElementById(\"toggle\");\r\n        button.addEventListener(\"click\", () => {\r\n            const cont = document.querySelector(\".bulk-container\");\r\n            cont.classList.toggle(\"active\");\r\n            this.setState({ expanded: document.querySelector(\".bulk-container\").classList.contains(\"active\") ? true : false, });\r\n        });\r\n\r\n        const chatBtn = document.getElementById(\"chat-toggle\");\r\n        const wrapper = document.getElementById(\"wrapper\");\r\n        wrapper.classList.toggle(\"toggled\");\r\n        this.setState({ chat: document.getElementById(\"wrapper\").classList.contains(\"toggled\") ? false : true, });\r\n        chatBtn.addEventListener(\"click\", () => {\r\n            wrapper.classList.toggle(\"toggled\");\r\n            this.setState({ chat: document.getElementById(\"wrapper\").classList.contains(\"toggled\") ? false : true, });\r\n        });\r\n\r\n        const send_btn = document.getElementById(\"send\");\r\n        var chat_list = document.getElementById(\"chat_list\");\r\n        var send_txt = document.getElementById(\"content\");\r\n        var history = \"\";\r\n        send_btn.addEventListener(\"click\", () => {\r\n            if (send_txt.value != \"\") {\r\n                var text = send_txt.value;\r\n                text = text.replaceAll(\"&\", \"&amp;\");\r\n                text = text.replaceAll(\"<\", \"&lt;\");\r\n                text = text.replaceAll(\"\\n\", \"<br>\");\r\n                history += \"<p style=\\\"background-color: #11131b; color: #f7f7f7; padding: 10px; margin:10px; border-radius: 14px;\\\"><b>\" + \"USER NAME\" + \"</b><br>\" + text + \"</p>\";\r\n                chat_list.innerHTML = history;\r\n                send_txt.value = \"\";\r\n            }\r\n        });\r\n\r\n        // Disable console logs in production\r\n        if(process.env.REACT_APP_DEBUG !== \"TRUE\"){\r\n            if(!window.console) window.console = {};\r\n            var methods = [\"log\", \"debug\", \"warn\", \"info\", \"error\"];\r\n            for(var i=0;i<methods.length;i++){\r\n                console[methods[i]] = function(){};\r\n            }\r\n        }\r\n\r\n        this.addLocalStorage();\r\n        // Calls saveLocalStorage upon the event of unloading our application, & makes sure it runs our it before we unload.\r\n        window.addEventListener(\r\n            \"beforeunload\",\r\n            this.saveLocalStorage.bind(this)\r\n        )\r\n    }\r\n\r\n    getFocusedTime = (time) =>{\r\n        this.setState({focusedTime: time});\r\n    }\r\n\r\n    setPlayerStatus = status => {\r\n        this.setState({playerReady:status});\r\n      }\r\n\r\n    inputChangeHandler = event => {\r\n        this.setState({[event.target.name]: event.target.value})\r\n    }\r\n\r\n    addTask = event => {\r\n        // preventDefault stops page from refreshing with every new to-do item\r\n        event.preventDefault();\r\n        // To-do item object\r\n        let newTask = {\r\n          task: this.state.todo,\r\n          id: Date.now(), // Any unique identifier would work as well\r\n          completed: false\r\n        };\r\n        // Adds newTask to the array of to-do items\r\n        this.setState({\r\n          todos: [...this.state.todos, newTask], // \"...\" is the spread operator to ensure there is only 1 array\r\n          todo: '' // Resets todo so it can be filled again\r\n        })\r\n      }\r\n\r\n    toggleComplete = itemId => {\r\n        // Maps over todos array & changes completed value if id matches\r\n        const todos = this.state.todos.map(todo => {\r\n          if (todo.id == itemId) {\r\n            todo.completed = !todo.completed\r\n          }\r\n          return todo\r\n        });\r\n        this.setState({todos,todo:''})\r\n    }\r\n\r\n      // Removes completed to-do items\r\n    removeItems = event => {\r\n        event.preventDefault();\r\n        // Sets todos array to a new array of only non-completed items based off the previous state\r\n        this.setState(prevState => {\r\n        return {\r\n            todos: prevState.todos.filter(todo => {\r\n            return !todo.completed;\r\n            })\r\n        }\r\n        })\r\n    }\r\n\r\n    // Removes ALL items\r\n    removeAllItems = event => {\r\n        event.preventDefault();\r\n        this.setState({todos:[]})\r\n    }\r\n\r\n    addLocalStorage = () => {\r\n        for (let key in this.state) { // Takes all of our items in state\r\n          if (localStorage.hasOwnProperty(key)) { // Checks if each item in state is in our local storage\r\n            let value = localStorage.getItem(key);\r\n            try {\r\n              value = JSON.parse(value); // Converts item strings to JavaScript objects\r\n              this.setState({[key]:value}) // Renders the correct data to the screen\r\n              console.log({[key]:value});\r\n            }\r\n            catch(event) {\r\n              this.setState({[key]:value})\r\n            }\r\n          }\r\n        }\r\n      }\r\n    \r\n      // Adds Items in State to our Local Storage\r\n      saveLocalStorage = () => {\r\n        for (let key in this.state) {\r\n          let value = JSON.stringify(this.state[key]); // Transforms any object/array into a string\r\n          localStorage.setItem(key, value);\r\n          console.log('hello');\r\n          // console.log(value);\r\n        }\r\n      }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div className={this.props.darkmode ? \"container-fluid dark-mode\" : \"container-fluid light-mode\"}>\r\n                <div className=\"heading\">\r\n                    <h1>CC-Final Pomodoro</h1>\r\n                    <div className=\"focusedTime\">\r\n                        <p>Total Focused Time</p>\r\n                        <p>{this.state.focusedTime} minutes</p>\r\n                    </div>\r\n                    <button id=\"chat-toggle\">\r\n                        <i className=\"material-icons-round\">{this.state.chat ? \"arrow_back_ios\" : \"arrow_forward_ios\"}</i>\r\n                    </button>\r\n                </div>\r\n                <div className=\"bulk-container\">\r\n                    <button id=\"toggle\">\r\n                        <i className=\"material-icons-round\">{this.state.expanded ? \"chevron_left\" : \"queue_music\"}</i>\r\n                    </button>\r\n                    <Timer sendFocusedTime={this.getFocusedTime} playerReady={this.state.playerReady}/>\r\n                    <MusicPlayer setPlayerStatus = {this.setPlayerStatus}/>   \r\n                </div>\r\n                <div>\r\n                    <TodoListDiv>\r\n                    <StyledH1>Todo List</StyledH1>\r\n                            <TodoList\r\n                                todos={this.state.todos}\r\n                                toggleComplete={this.toggleComplete}\r\n                            />\r\n                            <TodoForm\r\n                                todos={this.state.todos}\r\n                                value={this.state.todo}\r\n                                inputChangeHandler={this.inputChangeHandler}\r\n                                addTask={this.addTask}\r\n                                removeItems={this.removeItems}\r\n                                removeAllItems={this.removeAllItems}\r\n                            />\r\n                    </TodoListDiv>\r\n                </div>\r\n                <div className=\"footer\">\r\n                    <Link id=\"settings\" to=\"/settings\"><i className=\"material-icons-round\">settings</i></Link>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, {useState, useEffect} from 'react';\r\nimport '../css/Settings.css';\r\nimport '../css/Main.css';\r\n\r\nconst Settings = ({darkmode, setDarkmode}) => {\r\n\r\n    const [pref, setPref] =  useState({\r\n        playlistId: \"\",\r\n        continue: '',\r\n        shuffle: '',\r\n        darkmode: ''\r\n    })\r\n\r\n    const [saved, setSaved] = useState(true);\r\n\r\n    useEffect(()=>{\r\n        setPref(JSON.parse(localStorage.getItem(\"preferences\")));;\r\n    }, [])\r\n\r\n    const inputChange = (e) => {\r\n        setSaved(false);\r\n        setPref(({...pref, [e.target.name]: e.target.value}));\r\n    }\r\n\r\n    const checkChange = e => {\r\n        setSaved(false);\r\n        setPref(({...pref, [e.currentTarget.name]: e.currentTarget.checked}))\r\n    }\r\n\r\n    useEffect(()=>{\r\n        if(!saved){\r\n            const btn = document.querySelector(\".btn.btn-primary\");\r\n            btn.style.color = \"var(--secondary\";\r\n            btn.innerHTML = \"Save Changes\";\r\n            btn.style.background =\"var(--primary)\";\r\n        }\r\n    })\r\n\r\n    const submit = (e) => {\r\n        e.preventDefault();\r\n        \r\n        // Button Animation\r\n        const btn = document.querySelector(\".btn.btn-primary\");\r\n        btn.style.color = \"#fff\";\r\n        btn.innerHTML = '<span class=\"material-icons\">done</span>';\r\n        btn.style.background = \"var(--success)\";\r\n        setSaved(true);\r\n\r\n        // Link Stripping\r\n        var link = pref.playlistId.split(\"=\");\r\n        const playlistId = link.pop();\r\n        setPref(({...pref, playlistId: playlistId}));\r\n\r\n        // SavingLocal Storage \r\n        var local = JSON.parse(localStorage.getItem(\"preferences\"));\r\n        local.playlistId = playlistId;\r\n        local.continue = pref.continue;\r\n        local.shuffle = pref.shuffle;\r\n        local.darkmode = pref.darkmode;\r\n        localStorage.setItem(\"preferences\", JSON.stringify(local));\r\n\r\n        // Dark Mode Setting\r\n        setDarkmode(pref.darkmode);\r\n    }\r\n\r\n    const restore = (e) => {\r\n        e.preventDefault();\r\n        localStorage.removeItem(\"preferences\");\r\n    }\r\n\r\n    return (\r\n        <div className={darkmode ? \"container-fluid dark-mode\" : \"container-fluid light-mode\"}>\r\n            <div className=\"settings-header\">\r\n                <h1><a style={{\"color\": \"var(--primary)\"}} href=\"/\"><i className=\"backbutton material-icons-round\">arrow_back</i></a>Settings.</h1>\r\n            </div>\r\n            <div className=\"settings-display\">\r\n                <form className=\"settings-form\" onSubmit={submit}>\r\n                    <div className=\"settings-item\">\r\n                        <p>Youtube Playlist URL</p>\r\n                        <input className=\"playlistLink\" name=\"playlistId\" type=\"text\" placeholder=\"URL\" value={pref.playlistId} onClick={(e) => e.target.select()} onChange={inputChange} />\r\n                    </div>\r\n                    <div className=\"settings-item\">\r\n                        <p>Continue playing after timer</p>\r\n                        <div className=\"toggle-container\">\r\n                            <input id=\"switch\" className=\"continueCheck\" name=\"continue\" type=\"checkbox\" checked={pref.continue} onChange={checkChange} />\r\n                            <label htmlFor=\"switch\">Toggle</label>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"settings-item\">\r\n                        <p>Shuffle</p>\r\n                        <div className=\"toggle-container\">\r\n                            <input id=\"shuffle\" name=\"shuffle\" type=\"checkbox\" checked={pref.shuffle} onChange={checkChange} />\r\n                            <label htmlFor=\"shuffle\">Toggle</label>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"settings-item\">\r\n                        <p>Dark Mode</p>\r\n                        <div className=\"toggle-container\">\r\n                            <input id=\"darkmode\" name=\"darkmode\" type=\"checkbox\" checked={pref.darkmode} onChange={checkChange} />\r\n                            <label htmlFor=\"darkmode\">Toggle</label>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"button-container\">\r\n                        <button className=\"btn\" onClick={restore}>Restore Defaults</button>\r\n                        <button className=\"btn btn-primary\" type=\"submit\">Save Changes</button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n            <div className=\"footer\">\r\n                <p>2022 Cloud Computing HW3 Project</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Settings\r\n","import React, {useEffect, useState} from \"react\";\r\nimport {BrowserRouter as Router, Route} from \"react-router-dom\";\r\nimport Main from \"./Main\";\r\nimport Settings from \"./Settings\";\r\n\r\nconst App = () => {\r\n    const [darkMode, setDarkmode] = useState(()=>{\r\n        if(localStorage.getItem(\"preferences\")){\r\n            return JSON.parse(localStorage.getItem(\"preferences\")).darkmode;\r\n        }\r\n        else{\r\n            return true;\r\n        }\r\n    });\r\n\r\n    useEffect(()=>{\r\n        const preferences= {\r\n            playlistId: \"PLx65qkgCWNJIs3FPaj8JZhduXSpQ_ZfvL\",\r\n            continue: false,\r\n            shuffle: true,\r\n            darkmode: darkMode,\r\n        }\r\n        if(!localStorage.getItem(\"preferences\")){\r\n            localStorage.setItem(\"preferences\", JSON.stringify(preferences));\r\n        }\r\n    })\r\n\r\n    return (\r\n        <Router>\r\n            <Route path=\"/\" exact component={()=> <Main darkmode={darkMode}/>} />\r\n            <Route path=\"/settings\" exact component={()=><Settings darkmode={darkMode} setDarkmode={setDarkmode}/>} />\r\n        </Router>\r\n    )\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './Components/App';\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n\r\n"],"sourceRoot":""}