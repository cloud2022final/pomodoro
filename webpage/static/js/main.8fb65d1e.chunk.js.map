{"version":3,"sources":["Components/ThePlayer.js","Components/MusicPlayer.js","Components/Timer.js","assets/session_completed.ogg","Components/Todo-Components/Todo.js","Components/Todo-Components/TodoList.js","Components/Todo-Components/TodoForm.js","Components/Main.js","Components/Settings.js","Components/App.js","index.js"],"names":["ThePlayer","props","PlayerPlaying","event","sendStatus","PlayerPaused","PlayerChanged","vidInfo","target","getVideoData","sendVideoInfo","PlayerReady","cuePlaylist","listType","list","localStorage","getItem","JSON","parse","playlistId","index","shuffle","Math","round","random","setPlaybackQuality","setVolume","vol","state","volume","setShuffle","setLoop","document","getElementById","addEventListener","playingStatus","pauseVideo","playVideo","setTimeout","spinner","querySelector","e","detail","value","nextVideo","previousVideo","code","setState","prev","playerReady","opts","height","width","playerVars","autoplay","onReady","this","onStateChange","onPlay","onPause","Component","require","config","countdown","statusEvent","MusicPlayer","componentDidMount","preferences","handleVideoInfo","videoData","nowPlaying","thumbnail","video_id","getPlayingStatus","status","thumbnailBG","background","className","title","id","onClick","spinHandler","style","videoId","setPlayerStatus","Timer","val","CustomEvent","dispatchEvent","timer","started","audioInit","Audio","soundfile","seconds","sessionLength","then","Date","now","setInterval","secondsLeft","sessionEnded","displayCountdown","minutes","floor","remainderSeconds","displayedTime","time","clearTimer","clearInterval","is_work","focus_time","changebreaktime","changeworktime","addtime","minustime","audio","continue","play","setItem","Number","sendFocusedTime","timeFocused","worktime","breaktime","class","StyledDiv","styled","div","Todo","toggleComplete","todo","task","TodoList","todos","map","StyledForm","form","StyledInput","input","ButtonsDiv","StyledButton","button","TodoForm","name","type","onChange","inputChangeHandler","placeholder","addTask","removeItems","removeAllItems","TodoListDiv","StyledH1","h1","Main","expanded","classList","contains","chat","focusedTime","toggle","chatBtn","wrapper","send_btn","chat_list","send_txt","history","text","replaceAll","String","innerHTML","process","REACT_APP_DEBUG","window","console","methods","i","length","addLocalStorage","saveLocalStorage","bind","getFocusedTime","preventDefault","newTask","completed","itemId","prevState","filter","key","hasOwnProperty","log","stringify","mottos","mottoID","darkmode","to","Settings","setDarkmode","useState","pref","setPref","saved","setSaved","useEffect","checkChange","currentTarget","checked","btn","color","href","onSubmit","split","pop","local","select","htmlFor","removeItem","App","darkMode","path","exact","component","ReactDOM","render"],"mappings":"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","file":"static/js/main.8fb65d1e.chunk.js","sourcesContent":["import React,{Component} from \"react\";\r\nimport YouTube from 'react-youtube';\r\n\r\nclass ThePlayer extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      'volume': 50\r\n    };\r\n  }\r\n\r\n  render() {\r\n    const opts = {\r\n      height: \"390\",\r\n      width: \"640\",\r\n      playerVars: {\r\n        autoplay: 0,\r\n      }\r\n    };\r\n\r\n    return (\r\n      <YouTube\r\n        opts={opts}\r\n        onReady={this.PlayerReady}\r\n        onStateChange={this.PlayerChanged}\r\n        onPlay={this.PlayerPlaying}\r\n        onPause={this.PlayerPaused}\r\n      />\r\n    );\r\n  }\r\n\r\n  PlayerPlaying = event => {\r\n    this.props.sendStatus(true);\r\n  };\r\n\r\n  PlayerPaused = event => {\r\n    this.props.sendStatus(false);\r\n  };\r\n\r\n  PlayerChanged = event => {\r\n    const vidInfo = event.target.getVideoData();\r\n    this.props.sendVideoInfo(vidInfo);\r\n  };\r\n\r\n  PlayerReady = event => {\r\n    event.target.cuePlaylist({\r\n      listType: 'playlist',\r\n      list: localStorage.getItem(\"preferences\") ? `${JSON.parse(localStorage.getItem('preferences')).playlistId}` : \"PLx65qkgCWNJIs3FPaj8JZhduXSpQ_ZfvL\",\r\n      index: JSON.parse(localStorage.getItem('preferences')).shuffle ? Math.round(Math.random() * (10-1) + 1) : 0\r\n    });\r\n    event.target.setPlaybackQuality('low');\r\n\r\n    const setVolume = (vol) => {\r\n      event.target.setVolume(vol);\r\n    }\r\n    setVolume(this.state.volume);\r\n\r\n    const setShuffle = () =>{ \r\n      event.target.setShuffle(JSON.parse(localStorage.getItem('preferences')).shuffle);\r\n      event.target.setLoop(true);\r\n    }\r\n\r\n    const playtoggle = document.getElementById(\"playpause\");\r\n    playtoggle.addEventListener(\"click\", () => {\r\n      !this.props.playingStatus\r\n        ? event.target.playVideo()\r\n        : event.target.pauseVideo();\r\n      setTimeout(setShuffle, 1000);\r\n    });\r\n\r\n    const spinner = document.querySelector(\".spinner\");\r\n    spinner.addEventListener(\"click\", () => {\r\n      !this.props.playingStatus\r\n        ? event.target.playVideo()\r\n        : event.target.pauseVideo();\r\n      setTimeout(setShuffle, 1000);\r\n    });\r\n\r\n    spinner.addEventListener(\"timerStatus\", (e) => {\r\n      e.detail.value\r\n        ? event.target.playVideo()\r\n        : event.target.pauseVideo();\r\n      setTimeout(setShuffle, 1000);\r\n    });\r\n\r\n    const nextbutton = document.getElementById(\"nextbutton\");\r\n    nextbutton.addEventListener(\"click\", () => {\r\n      event.target.nextVideo();\r\n    });\r\n\r\n    const prevbutton = document.getElementById(\"prevbutton\");\r\n    prevbutton.addEventListener(\"click\", () => {\r\n      event.target.previousVideo();\r\n    });\r\n\r\n    document.addEventListener(\"keydown\", (e)=>{\r\n      switch(e.code){\r\n        case \"ArrowUp\":\r\n          this.setState(prev => {\r\n            if(prev.volume !== 100){\r\n              setVolume(prev.volume +5);\r\n              return ({\r\n                'volume': prev.volume+5\r\n              });\r\n            }\r\n          });\r\n          break;\r\n        case \"ArrowDown\":\r\n          this.setState(prev => {\r\n            if(prev.volume !== 0){\r\n              setVolume(prev.volume-5);\r\n              return ({\r\n                'volume': prev.volume-5\r\n              });\r\n            }\r\n          });\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n    });\r\n    this.props.playerReady(true);\r\n  };\r\n}\r\nexport default ThePlayer;","import React, { Component } from 'react';\r\nimport ThePlayer from './ThePlayer'\r\nimport '../css/MusicPlayer.css';\r\nrequire('dotenv').config();\r\n\r\nclass MusicPlayer extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      playingStatus: false,\r\n      nowPlaying: \"\",\r\n      preferences: []\r\n    };\r\n  }\r\n\r\n  componentDidMount = () => {\r\n    this.setState({\r\n      preferences: JSON.parse(localStorage.getItem(\"preferences\"))\r\n    });\r\n  }\r\n\r\n  handleVideoInfo = (videoData) => {\r\n    this.setState({ nowPlaying: videoData, thumbnail: `https://img.youtube.com/vi/${videoData.video_id}/0.jpg`})\r\n  }\r\n\r\n  getPlayingStatus = status => {\r\n    this.setState({playingStatus:status});\r\n  }\r\n\r\n  render() {\r\n    const thumbnailBG = {\r\n      background: 'url('+this.state.thumbnail+') no-repeat center'\r\n    }\r\n    return (\r\n      <div className=\"music\">\r\n        <p>Now Playing</p>\r\n        <h3>{this.state.nowPlaying.title}</h3>\r\n        <div className=\"spinner\" id=\"spinner\" onClick={this.spinHandler} style={thumbnailBG}>\r\n          <div className=\"hole\">\r\n            <div className=\"secondhole\"></div>\r\n          </div>\r\n        </div>\r\n        <div id=\"player\"></div>\r\n        <div className=\"button-container\">\r\n          <button id=\"prevbutton\" className=\"buttons\">\r\n            <i className=\"material-icons-round\">skip_previous</i>\r\n        </button>\r\n          <button id=\"playpause\" className=\"buttons\">\r\n            <i className=\"material-icons-round\">{this.state.playingStatus ? \"pause_circle_filled\" : \"play_circle_filled\"}</i>\r\n          </button>\r\n          <button id=\"nextbutton\" className=\"buttons\">\r\n            <i className=\"material-icons-round\">skip_next</i>\r\n          </button>\r\n        </div>\r\n        <ThePlayer\r\n          videoId={this.state.nowPlaying.videoId}\r\n          playingStatus={this.state.playingStatus}\r\n          sendVideoInfo={this.handleVideoInfo}\r\n          sendStatus = {this.getPlayingStatus}\r\n          playerReady = {this.props.setPlayerStatus}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MusicPlayer;","import React, {Component} from \"react\";\r\nimport '../css/Timer.css';\r\nimport soundfile from '../assets/session_completed.ogg';\r\n\r\nlet countdown, statusEvent;\r\n\r\nclass Timer extends Component{\r\n    constructor(){\r\n        super();\r\n        this.state = {\r\n            sessionLength: 1500,\r\n            started: false,\r\n            time: 25,\r\n            worktime: 25,\r\n            breaktime: 5,\r\n            focus_time: 25,\r\n            is_work: true,\r\n        }\r\n    }\r\n\r\n    componentDidMount = () =>{\r\n        const spinner = document.querySelector(\".spinner\");\r\n        statusEvent = (val) =>{\r\n            const event = new CustomEvent('timerStatus',{\r\n                detail: {\r\n                    value: val\r\n                }\r\n            })\r\n            spinner.dispatchEvent(event);\r\n        }\r\n    }\r\n\r\n    timer = () => {\r\n        if(this.props.playerReady){\r\n            this.setState({started: true});    \r\n            statusEvent(true);\r\n            const audioInit = new Audio(soundfile);\r\n            const seconds = this.state.sessionLength;\r\n            const now = Date.now();\r\n            const then = now + seconds * 1000;\r\n            countdown = setInterval(()=>{\r\n                const secondsLeft = Math.round((then - Date.now())/1000);\r\n                //check if timer should stop\r\n                if(secondsLeft <= 0){\r\n                    this.sessionEnded(audioInit);\r\n                }\r\n                this.displayCountdown(secondsLeft);\r\n            },1000)\r\n        }\r\n        else{\r\n            setTimeout(()=>{\r\n                this.timer();\r\n            },1000);\r\n        }\r\n    }\r\n\r\n    displayCountdown = (seconds) =>{\r\n        const minutes = Math.floor(seconds / 60);\r\n        const remainderSeconds = seconds % 60;\r\n        const displayedTime = `${minutes < 10 ? '0' : ''}${minutes}:${remainderSeconds < 10 ? '0' : ''}${remainderSeconds}`;\r\n        this.setState({time: displayedTime})\r\n    }   \r\n\r\n    clearTimer = () => {\r\n        statusEvent(false);\r\n        clearInterval(countdown);\r\n        if(this.state.is_work){\r\n            this.setState({started: false, time: 25, focus_time: 25, sessionLength: 1500})\r\n        }\r\n        else{\r\n            this.setState({started: false, time: 5, focus_time: 5, sessionLength: 300})\r\n        } \r\n    }\r\n\r\n    changebreaktime = () => {\r\n        this.setState({is_work: false, time: 5, sessionLength: 300, focus_time: 5})\r\n    }\r\n\r\n    changeworktime = () => {\r\n        this.setState({is_work: true, time: 25, sessionLength: 1500, focus_time: 25})\r\n    }\r\n\r\n    addtime = () => {\r\n        this.setState({time: this.state.time + 1, sessionLength: this.state.sessionLength + 60, focus_time: this.state.focus_time + 1})\r\n    }\r\n\r\n    minustime = () => {\r\n        this.setState({time: this.state.time > 1 ? this.state.time - 1 : 1, sessionLength: this.state.sessionLength > 60 ? this.state.sessionLength - 60 : 60, focus_time: this.state.focus_time > 1 ? this.state.focus_time - 1 : 1})\r\n    }\r\n\r\n    sessionEnded = (audio) => {\r\n        if(!JSON.parse(localStorage.getItem(\"preferences\")).continue){\r\n            statusEvent(false);\r\n        }\r\n        audio.play();\r\n        clearInterval(countdown);\r\n        if (localStorage.getItem('focusedTime')) {\r\n            if(this.state.is_work){\r\n                localStorage.setItem('focusedTime', Number(localStorage.getItem('focusedTime')) + this.state.focus_time)\r\n            }\r\n            else{\r\n                localStorage.setItem('focusedTime', Number(localStorage.getItem('focusedTime')))\r\n            }\r\n        }\r\n        else {\r\n            localStorage.setItem('focusedTime', this.state.focus_time)\r\n        }\r\n        this.props.sendFocusedTime(localStorage.getItem(\"focusedTime\"));\r\n        // Temp\r\n        setTimeout(()=>{\r\n            this.setState({ started: false, sessionLength: this.state.is_work? 1500 : 300, time: this.state.is_work? 25 : 5, focus_time: this.state.is_work? 25 : 0, timeFocused: localStorage.getItem(\"focusedTime\")});\r\n        }, 500);\r\n    }\r\n\r\n    render(){\r\n        return (\r\n        <div className=\"timer\">\r\n            <div className=\"buttontype\">\r\n                <button id=\"btn1\" onClick={this.changeworktime}> pomodoro</button>\r\n                <button id=\"btn2\" onClick={this.changebreaktime}> break</button>\r\n            </div>\r\n            <p id=\"spacehere\">Time Remaining</p>\r\n            <div className=\"timearea\">\r\n                <button id={this.state.started ? \"hidden\" : \"btn4\"} onClick={this.minustime}><i class=\"fa fa-minus\"></i></button>\r\n                <h1>{this.state.time}</h1>\r\n                <button id={this.state.started ? \"hidden\" : \"btn3\"} onClick={this.addtime}><i class=\"fa fa-plus\"></i></button>\r\n            </div>\r\n            <button id=\"timerStarter\" onClick={this.state.started ? this.clearTimer : this.timer}>{!this.state.started ? 'Start Timer' : 'Quit!'}</button>\r\n        </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Timer;","export default __webpack_public_path__ + \"static/media/session_completed.4e5c754b.ogg\";","import React from 'react';\r\nimport styled from \"styled-components\";\r\n\r\n\r\nconst StyledDiv = styled.div`\r\n  /* &:active {\r\n  box-shadow: 0 5px #A9837A; \r\n  }*/\r\n`\r\n\r\n\r\nconst Todo = props => {\r\n  return (\r\n    <StyledDiv\r\n      key={props.todo.id}\r\n      onClick={ event => {\r\n        props.toggleComplete(props.todo.id)\r\n      }}>\r\n      <p>• {props.todo.task}</p>\r\n    </StyledDiv>\r\n  )\r\n}\r\n\r\nexport default Todo;","import React from 'react';\r\nimport styled from \"styled-components\";\r\nimport Todo from './Todo';\r\n\r\nconst StyledDiv = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  color: var(--primary);\r\n  margin-top: 50px;\r\n  font-size: 25px;\r\n  text-transform:uppercase;\r\n`\r\n\r\nconst TodoList = props => {\r\n  return (\r\n    <StyledDiv>\r\n      {props.todos.map((todo, id) => (\r\n        <Todo\r\n          todo={todo}\r\n          key={id}\r\n          toggleComplete={props.toggleComplete}\r\n        />\r\n      ))}\r\n    </StyledDiv>\r\n  )\r\n}\r\n\r\nexport default TodoList;","import React from 'react';\r\nimport styled from \"styled-components\";\r\n\r\n\r\nconst StyledForm = styled.form`\r\n  display: flex;\r\n  align-items: stretch;\r\n  flex-direction: column\r\n  /* position: relative; */\r\n`\r\nconst StyledInput = styled.input`\r\n  margin-top: 10px;\r\n  font-size: 20px;\r\n  height: 40px;\r\n  border-radius: 7px;\r\n  padding: 5px;\r\n`\r\nconst ButtonsDiv = styled.div`\r\n  display: inline-block;\r\n  flex-direction: column;\r\n  align-items: stretch;\r\n  padding-top: 10px;\r\n`\r\nconst StyledButton = styled.button`\r\n  font-size: 18px;\r\n  /* display:inline-block; */\r\n  /* padding:0.5em 3em; - Padding dynamically changes button size based off of text*/\r\n  width: 160px;\r\n  line-height: 40px;\r\n  margin:0.5em .08em 0.3em .8em;\r\n  text-decoration:none;\r\n  font-family: 'EB Garamond', 'serif';\r\n  font-weight:400;\r\n  color: #11131b;\r\n  background: #FFFFFF;\r\n  text-align:center;\r\n  transition: all 0.15s;\r\n  border-radius: 7px;\r\n  &:hover{\r\n  background:#AAAAAA;\r\n  }\r\n`\r\n\r\n\r\nconst TodoForm = props => {\r\n  return (\r\n    <StyledForm>\r\n      <StyledInput\r\n        name='todo'\r\n        value={props.value}\r\n        type='text'\r\n        onChange={props.inputChangeHandler}\r\n        placeholder='Enter a task'\r\n      />\r\n      <ButtonsDiv>\r\n        <StyledButton onClick={props.addTask}>Add Task</StyledButton>\r\n        <StyledButton onClick={props.removeItems}>Remove Completed</StyledButton>\r\n        <StyledButton onClick={props.removeAllItems}>Remove All</StyledButton>\r\n      </ButtonsDiv>\r\n    </StyledForm>\r\n  )\r\n}\r\n\r\nexport default TodoForm;","import React, { Component } from 'react';\r\nimport styled from \"styled-components\";\r\nimport MusicPlayer from './MusicPlayer';\r\nimport Timer from './Timer';\r\nimport TodoList from './Todo-Components/TodoList';\r\nimport TodoForm from './Todo-Components/TodoForm';  \r\nimport {Link} from 'react-router-dom';\r\nimport '../css/Main.css';\r\n\r\nconst TodoListDiv = styled.div`\r\n  /* background: black; */\r\n  /* width: 50%; */\r\n  margin-left: 80px;\r\n  /* align-items: center; */\r\n`\r\n\r\nconst StyledH1 = styled.h1`\r\n  font-size: 32px;\r\n  margin: 10px;\r\n  color: var(--primary);\r\n  /* text-shadow: -1px 0 #AE857C, 0 1px #AE857C, 1px 0 #AE857C, 0 -1px #AE857C; */\r\n  text-align: center;\r\n`\r\n\r\nexport default class Main extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            expanded: \"\",\r\n            chat: \"\",\r\n            focusedTime: 0,\r\n            playerReady: false,\r\n            todo: '',\r\n            todos: [{ // Array of our to-do items\r\n                // task: '',\r\n                // id: '',\r\n                // completed: false\r\n            }],\r\n            mottos: [\r\n                // https://www.themuse.com/advice/45-inspirational-quotes-that-will-get-you-through-the-work-week\r\n                \"“Go as far as you can see; when you get there, you’ll be able to see further.”—Thomas Carlyle\",\r\n                \"“Your talent determines what you can do. Your motivation determines how much you’re willing to do. Your attitude determines how well you do it.” —Lou Holtz\",\r\n                \"“A year from now you may wish you had started today.” —Karen Lamb\",\r\n                \"“Never give up on a dream just because of the time it will take to accomplish it. The time will pass anyway.” —Earl Nightingale\",\r\n                \"“Don’t count the days, make the days count.” —Muhammad Ali\",\r\n                \"“You get to decide where your time goes. You can either spend it moving forward, or you can spend it putting out fires. You decide. And if you don’t decide, others will decide for you.” —Tony Morgan\",\r\n                \"“Believe you can and you’re halfway there.” —Theodore Roosevelt\",\r\n                \"“The only way to do great work is to love what you do. If you haven’t found it yet, keep looking. Don’t settle.” —Steve Jobs\",\r\n                \"“Even if you’re on the right track, you’ll get run over if you just sit there.” —Will Rogers\",\r\n                \"“Success is the sum of small efforts repeated day in and day out.” —Robert Collier\",\r\n                \"“If everything seems under control, you’re not going fast enough.” —Mario Andretti\",\r\n                \"“Develop success from failures. Discouragement and failure are two of the surest stepping stones to success.” —Dale Carnegie\",\r\n                \"“What we fear of doing most is usually what we most need to do.” —Ralph Waldo Emerson\",\r\n                \"“Success is a state of mind. If you want success, start thinking of yourself as a success.” —Joyce Brothers\",\r\n\r\n            ],\r\n            mottoID: 5,\r\n        }\r\n    }\r\n\r\n    componentDidMount = () =>{\r\n\r\n        this.setState({ \r\n            expanded: document.querySelector(\".bulk-container\").classList.contains(\"active\") ? true : false, \r\n            chat: true, \r\n            focusedTime: localStorage.getItem(\"focusedTime\") ? localStorage.getItem(\"focusedTime\") : 0\r\n        });\r\n\r\n        const button = document.getElementById(\"toggle\");\r\n        button.addEventListener(\"click\", () => {\r\n            const cont = document.querySelector(\".bulk-container\");\r\n            cont.classList.toggle(\"active\");\r\n            this.setState({ expanded: document.querySelector(\".bulk-container\").classList.contains(\"active\") ? true : false, });\r\n        });\r\n\r\n        const chatBtn = document.getElementById(\"chat-toggle\");\r\n        const wrapper = document.getElementById(\"wrapper\");\r\n        wrapper.classList.toggle(\"toggled\");\r\n        this.setState({ chat: document.getElementById(\"wrapper\").classList.contains(\"toggled\") ? false : true, });\r\n        chatBtn.addEventListener(\"click\", () => {\r\n            wrapper.classList.toggle(\"toggled\");\r\n            this.setState({ chat: document.getElementById(\"wrapper\").classList.contains(\"toggled\") ? false : true, });\r\n        });\r\n\r\n        const send_btn = document.getElementById(\"send\");\r\n        var chat_list = document.getElementById(\"chat_list\");\r\n        var send_txt = document.getElementById(\"content\");\r\n        var history = \"\";\r\n        send_btn.addEventListener(\"click\", () => {\r\n            if (send_txt.value !== \"\") {\r\n                var text = send_txt.value;\r\n                text = text.replaceAll(\"&\", \"&amp;\");\r\n                text = text.replaceAll(\"<\", \"&lt;\");\r\n                text = text.replaceAll(\"\\n\", \"<br>\");\r\n                history += \"<p style=\\\"background-color: #11131b; color: #f7f7f7; padding: 10px; margin:10px; border-radius: 14px;\\\"><b>USER NAME</b><br>\" + String(text) + \"</p>\";\r\n                chat_list.innerHTML = history;\r\n                send_txt.value = \"\";\r\n            }\r\n        });\r\n\r\n        // Disable console logs in production\r\n        if(process.env.REACT_APP_DEBUG !== \"TRUE\"){\r\n            if(!window.console) window.console = {};\r\n            var methods = [\"log\", \"debug\", \"warn\", \"info\", \"error\"];\r\n            for(var i=0;i<methods.length;i++){\r\n                console[methods[i]] = function(){};\r\n            }\r\n        }\r\n\r\n        this.addLocalStorage();\r\n        // Calls saveLocalStorage upon the event of unloading our application, & makes sure it runs our it before we unload.\r\n        window.addEventListener(\r\n            \"beforeunload\",\r\n            this.saveLocalStorage.bind(this)\r\n        )\r\n    }\r\n\r\n    getFocusedTime = (time) =>{\r\n        this.setState({focusedTime: time});\r\n    }\r\n\r\n    setPlayerStatus = status => {\r\n        this.setState({playerReady:status});\r\n      }\r\n\r\n    inputChangeHandler = event => {\r\n        this.setState({[event.target.name]: event.target.value})\r\n    }\r\n\r\n    addTask = event => {\r\n        // preventDefault stops page from refreshing with every new to-do item\r\n        event.preventDefault();\r\n        // To-do item object\r\n        let newTask = {\r\n          task: this.state.todo,\r\n          id: Date.now(), // Any unique identifier would work as well\r\n          completed: false\r\n        };\r\n        // Adds newTask to the array of to-do items\r\n        this.setState({\r\n          todos: [...this.state.todos, newTask], // \"...\" is the spread operator to ensure there is only 1 array\r\n          todo: '' // Resets todo so it can be filled again\r\n        })\r\n      }\r\n\r\n    toggleComplete = itemId => {\r\n        // Maps over todos array & changes completed value if id matches\r\n        const todos = this.state.todos.map(todo => {\r\n          if (todo.id === itemId) {\r\n            todo.completed = !todo.completed\r\n          }\r\n          return todo\r\n        });\r\n        this.setState({todos,todo:''})\r\n    }\r\n\r\n      // Removes completed to-do items\r\n    removeItems = event => {\r\n        event.preventDefault();\r\n        // Sets todos array to a new array of only non-completed items based off the previous state\r\n        this.setState(prevState => {\r\n        return {\r\n            todos: prevState.todos.filter(todo => {\r\n            return !todo.completed;\r\n            })\r\n        }\r\n        })\r\n    }\r\n\r\n    // Removes ALL items\r\n    removeAllItems = event => {\r\n        event.preventDefault();\r\n        this.setState({todos:[]})\r\n    }\r\n\r\n    addLocalStorage = () => {\r\n        for (let key in this.state) { // Takes all of our items in state\r\n          if (localStorage.hasOwnProperty(key)) { // Checks if each item in state is in our local storage\r\n            let value = localStorage.getItem(key);\r\n            try {\r\n              value = JSON.parse(value); // Converts item strings to JavaScript objects\r\n              this.setState({[key]:value}) // Renders the correct data to the screen\r\n              console.log({[key]:value});\r\n            }\r\n            catch(event) {\r\n              this.setState({[key]:value})\r\n            }\r\n          }\r\n        }\r\n      }\r\n    \r\n      // Adds Items in State to our Local Storage\r\n      saveLocalStorage = () => {\r\n        for (let key in this.state) {\r\n          let value = JSON.stringify(this.state[key]); // Transforms any object/array into a string\r\n          localStorage.setItem(key, value);\r\n          console.log('hello');\r\n          // console.log(value);\r\n        }\r\n      }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div className={this.props.darkmode ? \"container-fluid dark-mode\" : \"container-fluid light-mode\"}>\r\n                <div className=\"heading\">\r\n                    <h1>CC-Final Pomodoro</h1>\r\n                    <div className=\"focusedTime\">\r\n                        <p>Total Focused Time</p>\r\n                        <p>{this.state.focusedTime} minutes</p>\r\n                    </div>\r\n                    <button id=\"chat-toggle\">\r\n                        <i className=\"material-icons-round\">{this.state.chat ? \"arrow_back_ios\" : \"arrow_forward_ios\"}</i>\r\n                    </button>\r\n                </div>\r\n                <div className=\"bulk-container\">\r\n                    <button id=\"toggle\">\r\n                        <i className=\"material-icons-round\">{this.state.expanded ? \"chevron_left\" : \"queue_music\"}</i>\r\n                    </button>\r\n                    <Timer sendFocusedTime={this.getFocusedTime} playerReady={this.state.playerReady}/>\r\n                    <MusicPlayer setPlayerStatus = {this.setPlayerStatus}/>\r\n                </div>\r\n                <div>\r\n                    <TodoListDiv>\r\n                    <StyledH1>Todo List</StyledH1>\r\n                            <TodoList\r\n                                todos={this.state.todos}\r\n                                toggleComplete={this.toggleComplete}\r\n                            />\r\n                            <TodoForm\r\n                                todos={this.state.todos}\r\n                                value={this.state.todo}\r\n                                inputChangeHandler={this.inputChangeHandler}\r\n                                addTask={this.addTask}\r\n                                removeItems={this.removeItems}\r\n                                removeAllItems={this.removeAllItems}\r\n                            />\r\n                    </TodoListDiv>\r\n                </div>\r\n                <div className=\"footer\">\r\n                    <Link id=\"settings\" to=\"/settings\"><i className=\"material-icons-round\">settings</i></Link>\r\n                    <div id=\"quote\">\r\n                        {this.state.mottos[this.state.mottoID]}\r\n                    </div>\r\n                    <div></div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, {useState, useEffect} from 'react';\r\nimport '../css/Settings.css';\r\nimport '../css/Main.css';\r\n\r\nconst Settings = ({darkmode, setDarkmode}) => {\r\n\r\n    const [pref, setPref] =  useState({\r\n        playlistId: \"\",\r\n        continue: '',\r\n        shuffle: '',\r\n        darkmode: ''\r\n    })\r\n\r\n    const [saved, setSaved] = useState(true);\r\n\r\n    useEffect(()=>{\r\n        setPref(JSON.parse(localStorage.getItem(\"preferences\")));;\r\n    }, [])\r\n\r\n    const inputChange = (e) => {\r\n        setSaved(false);\r\n        setPref(({...pref, [e.target.name]: e.target.value}));\r\n    }\r\n\r\n    const checkChange = e => {\r\n        setSaved(false);\r\n        setPref(({...pref, [e.currentTarget.name]: e.currentTarget.checked}))\r\n    }\r\n\r\n    useEffect(()=>{\r\n        if(!saved){\r\n            const btn = document.querySelector(\".btn.btn-primary\");\r\n            btn.style.color = \"var(--secondary\";\r\n            btn.innerHTML = \"Save Changes\";\r\n            btn.style.background =\"var(--primary)\";\r\n        }\r\n    })\r\n\r\n    const submit = (e) => {\r\n        e.preventDefault();\r\n        \r\n        // Button Animation\r\n        const btn = document.querySelector(\".btn.btn-primary\");\r\n        btn.style.color = \"#fff\";\r\n        btn.innerHTML = '<span class=\"material-icons\">done</span>';\r\n        btn.style.background = \"var(--success)\";\r\n        setSaved(true);\r\n\r\n        // Link Stripping\r\n        var link = pref.playlistId.split(\"=\");\r\n        const playlistId = link.pop();\r\n        setPref(({...pref, playlistId: playlistId}));\r\n\r\n        // SavingLocal Storage \r\n        var local = JSON.parse(localStorage.getItem(\"preferences\"));\r\n        local.playlistId = playlistId;\r\n        local.continue = pref.continue;\r\n        local.shuffle = pref.shuffle;\r\n        local.darkmode = pref.darkmode;\r\n        localStorage.setItem(\"preferences\", JSON.stringify(local));\r\n\r\n        // Dark Mode Setting\r\n        setDarkmode(pref.darkmode);\r\n    }\r\n\r\n    const restore = (e) => {\r\n        e.preventDefault();\r\n        localStorage.removeItem(\"preferences\");\r\n    }\r\n\r\n    return (\r\n        <div className={darkmode ? \"container-fluid dark-mode\" : \"container-fluid light-mode\"}>\r\n            <div className=\"settings-header\">\r\n                <h1><a style={{\"color\": \"var(--primary)\"}} href=\"/\"><i className=\"backbutton material-icons-round\">arrow_back</i></a>Settings.</h1>\r\n            </div>\r\n            <div className=\"settings-display\">\r\n                <form className=\"settings-form\" onSubmit={submit}>\r\n                    <div className=\"settings-item\">\r\n                        <p>Youtube Playlist URL</p>\r\n                        <input className=\"playlistLink\" name=\"playlistId\" type=\"text\" placeholder=\"URL\" value={pref.playlistId} onClick={(e) => e.target.select()} onChange={inputChange} />\r\n                    </div>\r\n                    <div className=\"settings-item\">\r\n                        <p>Continue playing after timer</p>\r\n                        <div className=\"toggle-container\">\r\n                            <input id=\"switch\" className=\"continueCheck\" name=\"continue\" type=\"checkbox\" checked={pref.continue} onChange={checkChange} />\r\n                            <label htmlFor=\"switch\">Toggle</label>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"settings-item\">\r\n                        <p>Shuffle</p>\r\n                        <div className=\"toggle-container\">\r\n                            <input id=\"shuffle\" name=\"shuffle\" type=\"checkbox\" checked={pref.shuffle} onChange={checkChange} />\r\n                            <label htmlFor=\"shuffle\">Toggle</label>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"settings-item\">\r\n                        <p>Dark Mode</p>\r\n                        <div className=\"toggle-container\">\r\n                            <input id=\"darkmode\" name=\"darkmode\" type=\"checkbox\" checked={pref.darkmode} onChange={checkChange} />\r\n                            <label htmlFor=\"darkmode\">Toggle</label>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"button-container\">\r\n                        <button className=\"btn\" onClick={restore}>Restore Defaults</button>\r\n                        <button className=\"btn btn-primary\" type=\"submit\">Save Changes</button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n            <div className=\"footer\">\r\n                <p>2022 Cloud Computing HW3 Project</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Settings\r\n","import React, {useEffect, useState} from \"react\";\r\nimport {BrowserRouter as Router, Route} from \"react-router-dom\";\r\nimport Main from \"./Main\";\r\nimport Settings from \"./Settings\";\r\n\r\nconst App = () => {\r\n    const [darkMode, setDarkmode] = useState(()=>{\r\n        if(localStorage.getItem(\"preferences\")){\r\n            return JSON.parse(localStorage.getItem(\"preferences\")).darkmode;\r\n        }\r\n        else{\r\n            return true;\r\n        }\r\n    });\r\n\r\n    useEffect(()=>{\r\n        const preferences= {\r\n            playlistId: \"PLx65qkgCWNJIs3FPaj8JZhduXSpQ_ZfvL\",\r\n            continue: false,\r\n            shuffle: true,\r\n            darkmode: darkMode,\r\n        }\r\n        if(!localStorage.getItem(\"preferences\")){\r\n            localStorage.setItem(\"preferences\", JSON.stringify(preferences));\r\n        }\r\n    })\r\n\r\n    return (\r\n        <Router>\r\n            <Route path=\"/\" exact component={()=> <Main darkmode={darkMode}/>} />\r\n            <Route path=\"/room\" exact component={()=> <Main darkmode={darkMode}/>} />\r\n            <Route path=\"/settings\" exact component={()=><Settings darkmode={darkMode} setDarkmode={setDarkmode}/>} />\r\n        </Router>\r\n    )\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './Components/App';\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n\r\n"],"sourceRoot":""}